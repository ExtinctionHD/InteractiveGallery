#version 450

layout (local_size_x_id = 0) in;               
layout (local_size_y_id = 1) in;

layout (set = 0, binding = 0) uniform sampler2D hdrTexture;
layout (set = 0, binding = 1) uniform sampler2D exposureTexture;
layout (set = 1, binding = 0, rgba8) uniform image2D resultImage;

const float MIN_EXPOSURE = 0.4f;

void main()
{	
	// ivec2 uv = ivec2(gl_GlobalInvocationID.xy);
	ivec2 uv = ivec2(gl_WorkGroupID.xy * gl_WorkGroupSize.xy + gl_LocalInvocationID.xy);
	
	vec3 hdrColor = texelFetch(hdrTexture, uv, 0).rgb;

	vec3 exposureColor = texelFetch(exposureTexture, ivec2(0.0f), 0).rgb;
	float exposure = (exposureColor.r + exposureColor.g + exposureColor.b) / 3;

	float T = pow(exposure + MIN_EXPOSURE, -1);
	vec3 result = 1 - exp(-T * hdrColor);

	if (uv.x < 64 && uv.y < 64)
	{
		imageStore(resultImage, uv, vec4(vec3(exposure), 1.0f));
	}
	else
	{
		imageStore(resultImage, uv, vec4(result, 1.0f));
	}
}
